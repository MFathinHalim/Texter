</div>
 <div class="col-12 col-lg-3 h-100 sticky-on-navbar">
    <div class="card bg-dark text-white border-light d-none d-lg-flex rounded-lg" style="max-width: 400px; ">
        <div class="card-body">
            <input type="text" autocomplete="off" value="<%= searchTerm %>" id="searchInput" class="form-control" placeholder="Search...">
        </div>
    </div>
      <div class="card bg-dark text-white border-light d-none d-lg-flex rounded-lg" style="margin: 20px auto;">
        <div class="card-body">
          <h3 class="card-title">RULES</h3>
          <p class="card-text">Rules for posting
            <ul>
                <li>No Toxic</li>
                <li>No NSFW (Not Safe For Work)</li>
                <li>No Cyberbulying</li>
                <li>No Spam</li>
                <li>5 posts at 5 minutes</li>
                <li>Just Have Fun :D</li>
            </ul>
          </p>
        </div>
      </div>
      <div class="card bg-dark text-white d-none d-lg-flex border-light p-3 rounded-lg mt-3">
        <h5>Made By Fathin</h5>
        <p class="mb-0">made by <a href="https://www.fathin.my.id" class="text-info">M.Fathin Halim</a></p>
        <hr
            style="
              opacity: 100%;
              border-top: 1px solid var(--success) !important;
            "
        />
        <a class="text-warning" href="https://saweria.co/mfathinhalim">Support This Web In Saweria^^</a>
      </div>
    </div>
    <div class="navbar navbar-dark bg-dark-glass navbar-expand d-lg-none d-xl-none" style="opacity: 0; width: 1px">
    <ul class="navbar-nav nav-justified w-100">
      <li class="nav-item">
        <a href="/" class="nav-link" style="font-size: x-large;"><i class="fa-solid fa-house"></i></a>
      </li>
    </ul>
  </div>
    <nav class="navbar navbar-dark bg-dark-glass navbar-expand d-lg-none d-xl-none fixed-bottom">
    <ul class="navbar-nav nav-justified w-100">
      <li class="nav-item">
        <a href="/" class="nav-link" style="font-size: x-large;"><i class="fa-solid fa-house"></i></a>
      </li>
      <li class="nav-item">
        <a
            data-toggle="modal"
            data-target="#uploadModal" 
            class="nav-link" style="font-size: x-large;"><i class="fa-solid fa-magnifying-glass"></i></a>
      </li>
      <li class="nav-item">
        <a href="/" class="nav-link" style="font-size: x-large;"><i class="fa-solid fa-pen-to-square"></i></a>
      </li>
      <li class="nav-item">
        <a href="#" id="myDetails" class="nav-link" style="font-size: x-large;"><i class="fa-solid fa-user"></i></a>
      </li>
    </ul>
  </nav>
<script
      src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
      integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
      integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
      integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
      crossorigin="anonymous"
    ></script></body>
<script>
    localStorage.removeItem("name");
    localStorage.removeItem("username");
    localStorage.removeItem("id");
    const token = sessionStorage.getItem("myToken");
    function logout() {
        sessionStorage.removeItem('myToken')
        return window.location.href = "/login"
    }

    let username;
    let name;
    let id;
    document.querySelectorAll("#searchInput").forEach((inputSearch) => {
        inputSearch.addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                const query = event.target.value;
                window.location.href = `/?search=${encodeURIComponent(query)}`;
            }
        });
    })
    if (!window.location.href.toString().includes("/login") && !window.location.href.toString().includes("/signup") ){
        if(!token) {
            window.location.href = "/login"
        }
        fetch(`/user/check?id=${token}`).then(res => res.json()).then(check => {
            if(check.check === true) {
                logout()
            } 
            document.querySelectorAll("#myDetails").forEach((link) => {
                link.href = `/user/details/${check.user.username}`
            })
            document.getElementById("mypfp").src = check.user.pp;
            document.getElementById("myname").innerText = check.user.name;
            document.getElementById("myusername").innerText = `@${check.user.username}`;
            document.getElementById("mydesc").innerText = check.user.desc != undefined ? check.user.desc : "";
            document.getElementById("myfollowing").innerHTML = `<i class="fa-solid fa-user-group"></i> ${check.user.following.length} following`;
            document.getElementById("myfollowers").innerHTML = `<i class="fa-solid fa-user-group"></i> ${check.user.followers.length} followers`;
        });
        
        
        function share(copyText) {
        copyText = "https://texter-id.glitch.me" + copyText 
        // Copy the text inside the text field
        if (navigator.share) {
          navigator.clipboard.writeText(copyText);

          navigator
            .share({
              title: "Texter",
              text: "Post Seru Nih",
              url: copyText,
            })
            .then(() => console.log("Successful share"))
            .catch((error) => console.log("Error sharing", error));
        } else {
          try {
            window.AndroidShareHandler.share(copyText);
          } catch {
            navigator.clipboard.writeText(copyText);
            alert("Sudah Di Salin Ya, silahkan Beri ke Temanmu ya ^_^");
          }
        }
        }
    // Send a fetch request to the server for posting
    function sendPostRequest(form, replyTo, reQuote, ogId, repost,repostTitle) {
        event.preventDefault(); // Prevent default form submission
        const title = repostTitle ? repostTitle : form.querySelector("#title").value;
        if(title === "" || title === undefined || title === null) {
            return window.location.href="/"
        }
        document.getElementById("loading-screen").classList.remove("d-none");
        const formData = new FormData(); 
        if(!repost) {
            form.querySelector("button").remove()
            if (form.querySelector("#img").files[0]) {
                formData.append('image', form.querySelector("#img").files[0]); 
            } else {
                formData.append('image', ''); // Empty string if no image selected
            }
        }

        // Append data to FormData
        let data = {
            title: title,
            like: { total: 0, users: [] },
            replyTo: replyTo ? replyTo : "",
            ogId: ogId,
            repost: repost,
            reQuote: reQuote ? reQuote : undefined
        };

        formData.append('data', JSON.stringify(data));
        formData.append('token', token); // Assuming you have 'token' available
        // Handle image upload

        // Send POST request using fetch
        fetch('/post', {
            method: 'POST',
            body: formData,
        })
            .then(response => {
                // Periksa apakah responsnya sukses
                if (!response.ok) {
                    throw new Error('Network response was not ok.');
                }
                // Mengurai data JSON dari respons
                return response.json();
            })
            .then(post => {
                console.log(post); // Menampilkan data JSON dari respons
                
                // Redirect setelah POST request berhasil
                const redirectId = post.id;
                window.location.href = `/?id=${redirectId}`;
            })
            .catch(error => {
                console.error('Error sending POST request:', error);
            });

    }
      function previewImage(event) {
        var input = event.target;

        // Ensure that file is selected
        if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            var preview = document.getElementById("preview");
            preview.src = e.target.result;
        };

        reader.readAsDataURL(input.files[0]); // Read the uploaded file as a URL
        }
    }  
    var inputFile = document.getElementById("img");
    inputFile.addEventListener("change", previewImage);


    function sendEditProfile(myForm, id) {
        event.preventDefault(); // Prevent default form submission
        const formData = new FormData(); 
        const name = document.getElementById("displayName").value;
        const username = document.getElementById("username").innerText;
        const desc = document.getElementById("desc").value;
        // Append data to FormData
        const data = {
            id: id,
            username: username,
            name: name,
            pp: "",
            desc: desc
        };

        formData.append('data', JSON.stringify(data));
        formData.append('token', token); // Assuming you have 'token' available
        // Handle image upload
        if (myForm.querySelector("#img").files[0]) {
            formData.append('image', myForm.querySelector("#img").files[0]); 
        } else {
            formData.append('image', ''); // Empty string if no image selected
        }

        // Send POST request using fetch
        fetch(`/profile/${username}`, {
            method: 'POST',
            body: formData,
        }).then(() => {
            window.location.href = "/user/details/" + username
        })
    }

    function sendLikeRequest(id, button) {
        fetch(`/like/`, {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json',
            },
            body: JSON.stringify({
            id: id,
            token: token
            }),
        })
        .then(res => res.json()) // Parse the JSON response
        .then(data => { 
            button.innerHTML = '<i class="fa-solid fa-heart"></i> ' + data.likes; // Update the button text with the new like count
        })
        .catch(error => {
            console.error("Error sending like request:", error); 
            // Handle errors, e.g., display an error message to the user
        });
    }

    function followPost(target) {
        fetch(`/user/follow/${target}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                token: token,
                myname: username
            }),
        })
        .then(() => {
            window.location.reload()
        })
        }
    }

</script>
</html>